export function checkWhenNumberChange(array) {
  let obj_temp = { basicID: '', gastro: [], other: [], ppis: [] }; // provide as param
  let global_array = [];
  let gastro = [];
  let basic_copy;
  let flag = false;

  let obj_array = [];
  let first_entrance = true;

  if (array.length === 1) {
    global_array.push({ basicID: array[array.length - 1].basicID, gastro: array[array.length - 1].gastro, other: [], ppis: [] });
  } else {
    for (let i in array) {
      i = parseInt(i);
      // because of i+1 otherwise it can step out of the array to non-existing element
      if (i < array.length - 1) {
        // checks all continous
        if (array[i].basicID === array[i + 1].basicID) {
          flag = true;
          if (first_entrance) {
            first_entrance = false;
            gastro.push(array[i].gastro);
          }
          gastro.push(array[i + 1].gastro);
        }
        // checks all others, adds only one file
        if (array[i].basicID !== array[i + 1].basicID && !flag) {
          gastro.push(array[i].gastro);
        }
        if (array[i].basicID !== array[i + 1].basicID) {
          basic_copy = array[i].basicID;
          global_array.push({ basicID: basic_copy, gastro: gastro, other: [], ppis: [] });
          first_entrance = true;
          gastro = [];
          flag = false;
        }
      }
    }
  }
  // checking last pair of consecutives if exist because of the upper constraint which doesn't permit going inside
  if (gastro.length > 0) {
    global_array.push({ basicID: basic_copy + 1, gastro: gastro, other: [], ppis: [] });
  }
  // checking last index only, because of the upper constraint which doesn't permit going inside
  if (array[array.length - 1].basicID !== array[array.length - 2].basicID) {
    global_array.push({ basicID: array[array.length - 1].basicID, gastro: [array[array.length - 1].gastro], other: [], ppis: [] });
  }
  printArray(global_array);

  return '';
}
